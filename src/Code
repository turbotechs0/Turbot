/***************************************************
 HUSKYLENS An Easy-to-use AI Machine Vision Sensor
 <https://www.dfrobot.com/product-1922.html>
 
 ***************************************************
 This example shows the basic function of library for HUSKYLENS via Serial.
 
 Created 2020-03-13
 By [Angelo qiao](Angelo.qiao@dfrobot.com)
 
 GNU Lesser General Public License.
 See <http://www.gnu.org/licenses/> for details.
 All above must be included in any redistribution
 ****************************************************/

/***********Notice and Trouble shooting***************
 1.Connection and Diagram can be found here
 <https://wiki.dfrobot.com/HUSKYLENS_V1.0_SKU_SEN0305_SEN0336#target_23>
 2.This code is tested on Arduino Uno, Leonardo, Mega boards.
 ****************************************************/

#include "HUSKYLENS.h"
#include "SoftwareSerial.h"
#include <Servo.h>
#include <AFMotor.h>

AF_DCMotor motor(1);

Servo servo_2; //Servo motor. 
HUSKYLENS huskylens;
SoftwareSerial mySerial(A14, A15); // RX, TX. 
//HUSKYLENS Green line >> Pin 8 RX; Blue line >> Pin 9 TX; 
void printResult(HUSKYLENSResult result);

void setup() {
    Serial.begin(115200);
    mySerial.begin(9600);
    servo_2.attach(10); 
    motor.setSpeed(170); 
    while (!huskylens.begin(mySerial))
    {
        Serial.println(F("Begin failed!"));
        Serial.println(F("1.Please recheck the \"Protocol Type\" in HUSKYLENS (General Settings>>Protocol Type>>Serial 9600)"));
        Serial.println(F("2.Please recheck the connection."));
        delay(1000);
    }
}

void loop() { 
  motor.run(FORWARD); //RELEASE para apagar el motor. 
  servo_2.write(91); 

    if (!huskylens.request()) Serial.println(F("Fail to request data from HUSKYLENS, recheck the connection!"));
    else if(!huskylens.isLearned()) Serial.println(F("Nothing learned, press learn button on HUSKYLENS to learn one!"));
    else if(!huskylens.available()) Serial.println(F("No block or arrow appears on the screen!"));
    else
    {
        Serial.println(F("###########"));
        while (huskylens.available())
        {
            HUSKYLENSResult result = huskylens.read();
            printResult(result);
        }    
    }
  delay(100); //Es un delay para ver mejor los valores de la huskylens.
}

void printResult(HUSKYLENSResult result){
    if (result.command == COMMAND_RETURN_BLOCK){
        Serial.println(String()+F("Block:xCenter=")+result.xCenter+F(",yCenter=")+result.yCenter+F(",width=")+result.width+F(",height=")+result.height+F(",ID=")+result.ID);
    }
    else if (result.command == COMMAND_RETURN_ARROW){
        Serial.println(String()+F("Arrow:xOrigin=")+result.xOrigin+F(",yOrigin=")+result.yOrigin+F(",xTarget=")+result.xTarget+F(",yTarget=")+result.yTarget+F(",ID=")+result.ID);
    }
    else{
        Serial.println("Object unknown!");
    }
  if (result.ID == 1 && result.width > 60) { //ID Rojo de la pista. Giro hacia izquierda. 
    Serial.println("DENTRO DE ID 1"); 
    servo_2.write(115);
    delay(800); 
    servo_2.write(85); 
  }
  else {
    Serial.println("No hay nada we"); 
  }

  if (result.ID == 2 && result.width > 60) { //Azul en la pista. Giro hacia la izquierda. Doble equal for more presicion. 
    Serial.println("DENTRO DE ID 2");
    servo_2.write(55);
    delay(800); 
    servo_2.write(85); 
  }
  else if ( result.ID == 3) {
    Serial.println("Dentro de id3"); 
    servo_2.write(88); 
  }
/*
    if (result.xCenter < 106 && result.yCenter < 120 && result.height < 50) { //&& result.xCenter < 240 && result.yCenter > 60 && result.yCenter < 180) {
      servo_2.write(100); //Giro a la derecha. 
      Serial.println("IZQIUERDA ARRIBA"); 
    }
    else if (result.xCenter < 106 && result.yCenter > 120 && result.height > 50) {
      servo_2.write(115); //Giro izquierda 50
      Serial.println("IZQUIERDA ABAJO"); 
    }
    else if (result.xCenter > 106 && result.xCenter < 212 && result.yCenter < 120) {
      servo_2.write(90); //Centro 90
      Serial.println("CENTRO ARRIBA");  
    }
    else if (result.xCenter > 106 && result.xCenter < 212 && result.yCenter > 120) {
      servo_2.write(80); //Poco derecha 100
      delay(500); 
      servo_2.write(100); // Poco izquieda 80
      Serial.println("CENTRO ABAJO");  
    }
    else if (result.xCenter > 212 && result.yCenter < 120 && result.height < 50) {
      servo_2.write(70); //Giro derecha 120
      Serial.println("DERECHA ARRIBA"); 
    }
    else if (result.xCenter > 212 && result.yCenter > 120 && result.height > 50) {
      servo_2.write(50); //Giro derecha 130 
      Serial.println("DERECHA ABAJO"); 
    }
  }
  else {
    Serial.println("I love this"); 
    servo_2.write(85); 
  }

  else if (result.ID = 2) { //Azul en la pista. Giro hacia la izquierda
    Serial.println("DENTRO DE ID 2");
    servo_2.write(50);
  }
  else if(!huskylens.available()) {//Serial.println(F("No block or arrow appears on the screen!"));
  servo_2.write(90); 
  }
  else {
    Serial.println("Hicimos lo mejor."); 
  }
*/
/* 
  
    if (result.xCenter < 106 && result.yCenter < 120) { //&& result.xCenter < 240 && result.yCenter > 60 && result.yCenter < 180) {
      servo_2.write(45); 
      Serial.println("IZQIUERDA ARRIBA"); 
    }
    else if (result.xCenter < 106 && result.yCenter > 120) {
      servo_2.write(25); 
      Serial.println("IZQUIERDA ABAJO"); 
    }
    else if (result.xCenter > 106 && result.xCenter < 212 && result.yCenter < 120) {
      servo_2.write(80);
      Serial.println("CENTRO ARRIBA");  
    }
    else if (result.xCenter > 106 && result.xCenter < 212 && result.yCenter > 120) {
      servo_2.write(100);
      Serial.println("CENTRO ABAJO");  
    }
    else if (result.xCenter > 212 && result.yCenter < 120) {
      servo_2.write(135); 
      Serial.println("DERECHA ARRIBA"); 
    }
    else if (result.xCenter > 212 && result.yCenter > 120) {
      servo_2.write(150); 
      Serial.println("DERECHA ABAJO"); 
    }
  }
*/
  //x>80 && x < 240 
  //y> 60 && y< 180
  //servo_2.write(130);
  //Serial.println(result.xCenter); 
  delay(100); 
}
